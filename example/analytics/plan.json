{
	"create_time": "2021-06-16T02:13:20.385Z",
	"display_name": "Rudder Typer Validator",
	"name": "workspaces/1tzQSBIsCxV5OP2t0ImV1qhFF8q/tracking-plans/tp_1u0jrdhXRRhPNWlHDEKaLGicbFW",
	"rules": {
		"events": [
			{
				"description": "Validates that clients support fields with multiple (union) types.",
				"id": "ev_1u0jrcfqVMHtkbGBlni3RgV1QqT",
				"name": "Union Type",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"universe_name": {
									"description": "",
									"type": [
										"string",
										"null",
										"integer"
									]
								}
							},
							"required": [
								"universe_name"
							],
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": "1-0-0"
			},
			{
				"description": "Validates that client property sanitize enums.",
				"id": "ev_1u0jrcinp9mq64ME9soeINrPZGP",
				"name": "Enum Types",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"string const": {
									"description": "A string property that only accepts a single enum value.",
									"enum": [
										"Rick Sanchez"
									],
									"type": "string"
								},
								"string enum": {
									"description": "A string property that accepts multiple enum values.",
									"enum": [
										"Evil Morty",
										"Lawyer Morty"
									],
									"type": "string"
								}
							},
							"type": "object"
						},
						"traits": {
							"type": "object"
						}
					},
					"type": "object"
				},
				"version": "1-0-0"
			},
			{
				"description": "Validates that clients handle all of the supported field types, as nullable required fields. If a field is null, it is expected to be sent through.",
				"id": "ev_1u0jrf47oTKLbwZB7A9Q0BkwIFr",
				"name": "Every Nullable Required Type",
				"rules": {
					"$schema": "http://json-schema.org/draft-07/schema#",
					"properties": {
						"context": {
						},
						"properties": {
							"properties": {
								"required any": {
									"description": "Required any property"
								},
								"required array": {
									"description": "Required array property",
									"type": [
										"array",
										"null"
									]
								},
								"required array with properties": {
									"description": "Required array with properties",
									"items": {
										"properties": {
											"required any": {
												"description": "Required any property"
											},
											"required array": {
												"description": "Required array property",
												"type": [
													"array",
													"null"
												]
											},
											"required boolean": {
												"description": "Required boolean property",
												"type": [
													"boolean",
													"null"
												]
											},
											"required int": {
												"description": "Required integer property",
												"type": [
													"integer",
													"null"
												]
											},
											"required number": {
												"description": "Required number property",
												"type": [
													"number",
													"null"
												]
											},
											"required object": {
												"description": "Required object property",
												"properties": {
												},
												"required": [
												],
												"type": [
													"object",
													"null"
												]
											},
											"required string": {
												"description": "Required string property",
												"type": [
													"string",
													"null"
												]
											},
											"required string with regex": {
												"description": "Required string property with a regex conditional",
												"pattern": "Evil Morty|Lawyer Morty",
												"type": [
													"string",
													"null"
												]
											}
										},
										"required": [
											"required any",
											"required array",
											"required boolean",
											"required int",
											"required number",
											"required object",
											"required string",
											"required string with regex"
										],
										"type": [
											"object",
											"null"
										]
									},
									"type": [
										"array",
										"null"
									]
								},
								"required boolean": {
									"description": "Required boolean property",
									"type": [
										"boolean",
										"null"
									]
								},
								"required int": {
									"description": "Required integer property",
									"type": [
										"integer",
										"null"
									]
								},
								"required number": {
									"description": "Required number property",
									"type": [
										"number",
										"null"
									]
								},
								"required object": {
									"description": "Required object property",
									"properties": {
									},
									"required": [
									],
									"type": [
										"object",
										"null"
									]
								},
								"required object with properties": {
									"description": "Required object with properties",
									"properties": {
										"required any": {
											"description": "Required any property"
										},
										"required array": {
											"description": "Required array property",
											"type": [
												"array",
												"null"
											]
										},
										"required boolean": {
											"description": "Required boolean property",
											"type": [
												"boolean",
												"null"
											]
										},
										"required int": {
											"description": "Required integer property",
											"type": [
												"integer",
												"null"
											]
										},
										"required number": {
											"description": "Required number property",
											"type": [
												"number",
												"null"
											]
										},
										"required object": {
											"description": "Required object property",
											"properties": {
											},
											"required": [
											],
											"type": [
												"object",
												"null"
											]
										},
										"required string": {
											"description": "Required string property",
											"type": [
												"string",
												"null"
											]
										},
										"required string with regex": {
											"description": "Required string property with a regex conditional",
											"pattern": "Evil Morty|Lawyer Morty",
											"type": [
												"string",
												"null"
											]
										}
									},
									"required": [
										"required any",
										"required array",
										"required boolean",
										"required int",
										"required number",
										"required object",
										"required string",
										"required string with regex"
									],
									"type": [
										"object",
										"null"
									]
								},
								"required string": {
									"description": "Required string property",
									"type": [
										"string",
										"null"
									]
								},
								"required string with regex": {
									"description": "Required string property with a regex conditional",
									"pattern": "Evil Morty|Lawyer Morty",
									"type": [
										"string",
										"null"
									]
								}
							},
							"required": [
								"required any",
								"required array",
								"required boolean",
								"required int",
								"required number",
								"required object",
								"required string",
								"required string with regex",
								"required object with properties",
								"required array with properties"
							],
							"type": "object"
						},
						"traits": {
						}
					},
					"required": [
						"properties"
					],
					"type": "object"
				},
				"version": "1-0-0"
			}
		],
		"group": {
			"$schema": "http://json-schema.org/draft-04/schema#",
			"properties": {
				"context": {
				},
				"properties": {
				},
				"traits": {
					"properties": {
						"company": {
							"type": [
								"object"
							]
						}
					},
					"required": [
						"company"
					],
					"type": "object"
				}
			},
			"type": "object",
			"version": "1-0-0"
		},
		"identify": {
			"$schema": "http://json-schema.org/draft-04/schema#",
			"properties": {
				"context": {
				},
				"properties": {
				},
				"traits": {
					"properties": {
						"age": {
							"type": [
								"number"
							]
						},
						"name": {
							"type": [
								"string"
							]
						},
						"occupation": {
							"type": [
								"string"
							]
						}
					},
					"required": [
						"name"
					],
					"type": "object"
				}
			},
			"type": "object",
			"version": "1-0-0"
		}
	},
	"update_time": "2021-06-16T02:13:20.385Z",
	"version": 1
}